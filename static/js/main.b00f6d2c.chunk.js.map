{"version":3,"sources":["Models/Actor/ActorModel.js","Components/ActorCard/ActorCard.js","Components/ActorGallery/ActorGallery.js","Pages/ActorsPage/ActorsPage.js","Pages/MoviesPage/MoviesPage.js","Pages/HomePage/HomePage.js","App.js","reportWebVitals.js","index.js"],"names":["ActorModel","fname","lname","birthday","actorImage","imdbLink","this","birthYear","substring","Date","getFullYear","ActorCard","props","className","name","age","src","image","alt","href","link","target","rel","ActorGallery","actorCards","actorsArray","map","actor","index","getFullName","getAge","ActorsPage","React","useState","filterInput","changeFilter","sortBy","changeSort","actors","setActors","filteredActors","setFilteredActors","axios","get","then","response","data","plainActor","useEffect","filter","toLowerCase","includes","console","log","sort","actor1","actor2","type","value","placeholder","onChange","e","filterActors","id","MoviesPage","HomePage","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b00f6d2c.chunk.js","sourcesContent":["\r\n\r\n// A class represents a movie actress. An actor has first name, last name, birthday, an image and IMDB link \r\nclass ActorModel {\r\n\r\n    constructor(fname, lname, birthday, actorImage, imdbLink) {\r\n        this.fname = fname;\r\n        this.lname = lname;\r\n        this.birthday = birthday;\r\n        this.actorImage = \"https://m.media-amazon.com/images/\" + actorImage;\r\n        this.imdbLink = \"https://www.imdb.com/name/\" + imdbLink;\r\n    }\r\n\r\n\r\n    getAge() {\r\n        let birthYear = this.birthday.substring(0,4);\r\n        let currentYear = new Date().getFullYear();\r\n    \r\n        return currentYear - birthYear;\r\n    }\r\n\r\n    getFullName() {\r\n        return `${this.fname} ${this.lname}`;\r\n    }\r\n}\r\n\r\nexport default ActorModel;","import React from 'react';\r\nimport './ActorCard.css';\r\n\r\nfunction ActorCard(props) {\r\n\r\n    return (\r\n        <div className=\"c-actorCard\">\r\n            <h2>{props.name}</h2>\r\n            <h3>Age: {props.age}</h3>\r\n            <img src={props.image} alt=\"actor's selfie\"/>\r\n            <a href={props.link} target=\"_blank\" rel=\"noreferrer\">IMDB Link</a>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ActorCard;","import React from 'react';\r\nimport './ActorGallery.css';\r\nimport ActorCard from '../ActorCard/ActorCard';\r\n\r\nfunction ActorGallery(props) {\r\n\r\n    var actorCards = props.actorsArray.map((actor, index) => <ActorCard key={index} name={actor.getFullName()} age={actor.getAge()} image={actor.actorImage} link={actor.imdbLink}/>);\r\n\r\n\r\n    return (\r\n        <div className=\"p-actorGallery\">\r\n            <div className=\"col-12 col-md-6 col-s-1\">\r\n                {actorCards}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ActorGallery;","import React from 'react';\r\nimport './ActorsPage.css';\r\nimport ActorModel from '../../Models/Actor/ActorModel';\r\nimport ActorGallery from '../../Components/ActorGallery/ActorGallery';\r\nimport axios from 'axios';\r\n\r\n\r\nfunction ActorsPage() {\r\n\r\n    const [filterInput, changeFilter] = React.useState(\"\");\r\n    const [sortBy, changeSort] = React.useState(\"fname\");\r\n    const [actors, setActors] = React.useState([]);\r\n    const [filteredActors, setFilteredActors] = React.useState([]);\r\n    \r\n\r\n    React.useState(() => {\r\n      axios.get(\"actors.json\").then(response => {\r\n        setActors(response.data.map(plainActor => new ActorModel(plainActor.fname, plainActor.lname, plainActor.birthday, plainActor.actorImage, plainActor.imdbLink)));\r\n      });\r\n    }, []);\r\n    \r\n    React.useEffect(() => {\r\n      setFilteredActors(actors.filter(actor => (actor.getFullName().toLowerCase().includes(filterInput.toLowerCase()))));\r\n      console.log(actors)\r\n    }, [filterInput]);\r\n    \r\n    actors.sort((actor1, actor2) => {\r\n        if (actor1[sortBy] > actor2[sortBy]) {\r\n          return 1;\r\n        } else if (actor1[sortBy] < actor2[sortBy]) {\r\n          return -1;\r\n        } else {\r\n          return 0;\r\n        }\r\n      });\r\n\r\n    function filterActors(e) {\r\n        changeFilter(e.target.value);\r\n      }\r\n\r\n    return (\r\n        <div className=\"p-actors\">\r\n            <h1>Actor Gallery</h1>\r\n            <input type=\"text\" value={filterInput} placeholder=\"Filter by first name or last name\" onChange={(e) => filterActors(e)}/>\r\n            Sort By:\r\n            <select id=\"sortBy\" value={sortBy} onChange={(e) => changeSort(e.target.value)}>\r\n                <option value=\"fname\">First Name</option>\r\n                <option value=\"lname\">Last Name</option>\r\n            </select>\r\n            <ActorGallery actorsArray={filterInput !== \"\" ? filteredActors : actors}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ActorsPage;","import React from 'react';\r\nimport './MoviesPage.css';\r\n\r\nfunction MoviesPage() {\r\n    return (\r\n        <div className=\"p-movies\">\r\n            <h3>Movies Page</h3>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MoviesPage;","import React from 'react';\r\n\r\nfunction HomePage() {\r\n    return (\r\n        <div className=\"p-home\">\r\n            <h1>Home Page</h1>\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HomePage;","import './App.css';\r\nimport React from 'react';\r\nimport ActorsPage from './Pages/ActorsPage/ActorsPage';\r\nimport MoviesPage from './Pages/MoviesPage/MoviesPage';\r\nimport { HashRouter, Router, Switch, Route } from 'react-router-dom';\r\nimport HomePage from './Pages/HomePage/HomePage';\r\n\r\nfunction App() {  \r\n\r\n  return (\r\n    <HashRouter>\r\n      <Switch>\r\n        <Route exact path=\"/\">\r\n          <HomePage/>\r\n        </Route>\r\n        <Route exact path=\"/actors\">\r\n          <ActorsPage/>\r\n        </Route>\r\n        <Route exact path=\"/movies\">\r\n          <MoviesPage/>\r\n        </Route>\r\n      </Switch>\r\n    </HashRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}