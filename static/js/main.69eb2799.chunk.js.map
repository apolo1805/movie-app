{"version":3,"sources":["Models/Actor/ActorModel.js","Components/ActorCard/ActorCard.js","Components/ActorGallery/ActorGallery.js","Pages/ActorsPage/ActorsPage.js","Pages/MoviesPage/MoviesPage.js","Pages/HomePage/HomePage.js","App.js","reportWebVitals.js","index.js"],"names":["ActorModel","fname","lname","birthday","actorImage","imdbLink","this","birthYear","substring","Date","getFullYear","ActorCard","props","className","name","age","src","image","alt","href","link","target","rel","ActorGallery","actorCards","actorsArray","map","actor","index","getFullName","getAge","ActorsPage","React","useState","filterInput","changeFilter","sortBy","changeSort","actors","setActors","filteredActors","setFilteredActors","history","useHistory","axios","get","then","response","data","plainActor","useEffect","filter","toLowerCase","includes","console","log","sort","actor1","actor2","Button","onClick","goBack","type","value","placeholder","onChange","e","filterActors","id","MoviesPage","movies","setMovies","results","movie","title","HomePage","to","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.69eb2799.chunk.js","sourcesContent":["\n\n// A class represents a movie actress. An actor has first name, last name, birthday, an image and IMDB link \nclass ActorModel {\n\n    constructor(fname, lname, birthday, actorImage, imdbLink) {\n        this.fname = fname;\n        this.lname = lname;\n        this.birthday = birthday;\n        this.actorImage = \"https://m.media-amazon.com/images/\" + actorImage;\n        this.imdbLink = \"https://www.imdb.com/name/\" + imdbLink;\n    }\n\n\n    getAge() {\n        let birthYear = this.birthday.substring(0,4);\n        let currentYear = new Date().getFullYear();\n    \n        return currentYear - birthYear;\n    }\n\n    getFullName() {\n        return `${this.fname} ${this.lname}`;\n    }\n}\n\nexport default ActorModel;","import React from 'react';\nimport './ActorCard.css';\n\nfunction ActorCard(props) {\n\n    return (\n        <div className=\"c-actorCard\">\n            <h2>{props.name}</h2>\n            <h3>Age: {props.age}</h3>\n            <img src={props.image} alt=\"actor's selfie\"/>\n            <a href={props.link} target=\"_blank\" rel=\"noreferrer\">IMDB Link</a>\n        </div>\n    );\n}\n\nexport default ActorCard;","import React from 'react';\nimport './ActorGallery.css';\nimport ActorCard from '../ActorCard/ActorCard';\n\nfunction ActorGallery(props) {\n\n    var actorCards = props.actorsArray.map((actor, index) => <ActorCard key={index} name={actor.getFullName()} age={actor.getAge()} image={actor.actorImage} link={actor.imdbLink}/>);\n\n\n    return (\n        <div className=\"p-actorGallery\">\n            <div className=\"col-12 col-md-6 col-s-1\">\n                {actorCards}\n            </div>\n        </div>\n    );\n}\n\nexport default ActorGallery;","import React from 'react';\nimport './ActorsPage.css';\nimport ActorModel from '../../Models/Actor/ActorModel';\nimport ActorGallery from '../../Components/ActorGallery/ActorGallery';\nimport axios from 'axios';\nimport { Button } from 'react-bootstrap';\nimport { useHistory } from 'react-router-dom';\n\n\nfunction ActorsPage() {\n\n    const [filterInput, changeFilter] = React.useState(\"\");\n    const [sortBy, changeSort] = React.useState(\"fname\");\n    const [actors, setActors] = React.useState([]);\n    const [filteredActors, setFilteredActors] = React.useState([]);\n    const history = useHistory();\n    \n\n    React.useState(() => {\n      axios.get(\"actors.json\").then(response => {\n        setActors(response.data.map(plainActor => new ActorModel(plainActor.fname, plainActor.lname, plainActor.birthday, plainActor.actorImage, plainActor.imdbLink)));\n      });\n    }, []);\n    \n    React.useEffect(() => {\n      setFilteredActors(actors.filter(actor => (actor.getFullName().toLowerCase().includes(filterInput.toLowerCase()))));\n      console.log(actors)\n    }, [filterInput]);\n    \n    actors.sort((actor1, actor2) => {\n        if (actor1[sortBy] > actor2[sortBy]) {\n          return 1;\n        } else if (actor1[sortBy] < actor2[sortBy]) {\n          return -1;\n        } else {\n          return 0;\n        }\n      });\n\n    function filterActors(e) {\n        changeFilter(e.target.value);\n      }\n\n    return (\n        <div className=\"p-actors\">\n            <Button onClick={() => history.goBack()}>Back</Button>\n            <h1>Actor Gallery</h1>\n            <div className=\"search-filter\">\n              <input type=\"text\" value={filterInput} placeholder=\"Filter by first name or last name\" onChange={(e) => filterActors(e)}/>\n              Sort By:\n              <select id=\"sortBy\" value={sortBy} onChange={(e) => changeSort(e.target.value)}>\n                <option value=\"fname\">First Name</option>\n                <option value=\"lname\">Last Name</option>\n              </select>\n            </div>\n            <ActorGallery actorsArray={filterInput !== \"\" ? filteredActors : actors}/>\n        </div>\n    );\n}\n\nexport default ActorsPage;","import axios from 'axios';\nimport React from 'react';\nimport { Button } from 'react-bootstrap';\nimport { useHistory } from 'react-router-dom';\nimport './MoviesPage.css';\n\nfunction MoviesPage() {\n    const [movies, setMovies] = React.useState([]);\n    const history = useHistory();\n\n    const apiKey = \"ca0fa9f32ca8d7ab8daf415172adb490\";\n    const movieImgPrefix = \"https://image.tmdb.org/t/p/w200\";\n\n\n    React.useEffect(() => {\n        axios.get(\"https://api.themoviedb.org/3/movie/popular?api_key=\" + apiKey).then(response => {setMovies(response.data.results)})}, []);\n\n    return (\n        <div className=\"p-movies\">\n            <Button onClick={() => history.goBack()}>Back</Button>\n            <h1>Movies Page</h1>\n            {\n                movies.map(movie => \n                    <>\n                        <h3>{movie.title}</h3>\n                        <img src={movieImgPrefix + movie[\"poster_path\"]}/>\n                    </>)\n            }\n        </div>\n    );\n}\n\nexport default MoviesPage;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './HomePage.css';\n\nfunction HomePage() {\n    return (\n        <div className=\"p-home\">\n            <h1>Home Page</h1>\n            <p>\n                Go to <Link to=\"/actors\">Actors Page</Link><br/>\n            </p>\n\n            <p>\n                Go to <Link to=\"/movies\">Movies Page</Link>\n            </p>\n        </div>\n    );\n}\n\nexport default HomePage;","import './App.css';\nimport React from 'react';\nimport ActorsPage from './Pages/ActorsPage/ActorsPage';\nimport MoviesPage from './Pages/MoviesPage/MoviesPage';\nimport { HashRouter, Router, Switch, Route } from 'react-router-dom';\nimport HomePage from './Pages/HomePage/HomePage';\n\nfunction App() {  \n\n  return (\n    <HashRouter>\n      <Switch>\n        <Route exact path=\"/\">\n          <HomePage/>\n        </Route>\n        <Route exact path=\"/actors\">\n          <ActorsPage/>\n        </Route>\n        <Route exact path=\"/movies\">\n          <MoviesPage/>\n        </Route>\n      </Switch>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}