{"version":3,"sources":["Models/Actor/ActorModel.js","Components/ActorCard/ActorCard.js","Components/ActorGallery/ActorGallery.js","Pages/ActorsPage/ActorsPage.js","App.js","reportWebVitals.js","index.js"],"names":["ActorModel","fname","lname","birthday","actorImage","imdbLink","this","birthYear","substring","Date","getFullYear","ActorCard","props","className","name","age","src","image","alt","href","link","target","rel","ActorGallery","actorCards","actorsArray","map","actor","index","getFullName","getAge","ActorsPage","React","useState","filterInput","changeFilter","sortBy","changeSort","actors","setActors","filteredActors","setFilteredActors","axios","get","then","response","data","plainActor","useEffect","filter","toLowerCase","includes","console","log","sort","actor1","actor2","type","value","placeholder","onChange","e","filterActors","id","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.23b096c0.chunk.js","sourcesContent":["\n\n// A class represents a movie actress. An actor has first name, last name, birthday, an image and IMDB link \nclass ActorModel {\n\n    constructor(fname, lname, birthday, actorImage, imdbLink) {\n        this.fname = fname;\n        this.lname = lname;\n        this.birthday = birthday;\n        this.actorImage = \"https://m.media-amazon.com/images/\" + actorImage;\n        this.imdbLink = \"https://www.imdb.com/name/\" + imdbLink;\n    }\n\n\n    getAge() {\n        let birthYear = this.birthday.substring(0,4);\n        let currentYear = new Date().getFullYear();\n    \n        return currentYear - birthYear;\n    }\n\n    getFullName() {\n        return `${this.fname} ${this.lname}`;\n    }\n}\n\nexport default ActorModel;","import React from 'react';\nimport './ActorCard.css';\n\nfunction ActorCard(props) {\n\n    return (\n        <div className=\"c-actorCard\">\n            <h2>{props.name}</h2>\n            <h3>Age: {props.age}</h3>\n            <img src={props.image} alt=\"actor's selfie\"/>\n            <a href={props.link} target=\"_blank\" rel=\"noreferrer\">IMDB Link</a>\n        </div>\n    );\n}\n\nexport default ActorCard;","import React from 'react';\nimport './ActorGallery.css';\nimport ActorCard from '../ActorCard/ActorCard';\n\nfunction ActorGallery(props) {\n\n    var actorCards = props.actorsArray.map((actor, index) => <ActorCard key={index} name={actor.getFullName()} age={actor.getAge()} image={actor.actorImage} link={actor.imdbLink}/>);\n\n\n    return (\n        <div className=\"p-actorGallery\">\n            <div className=\"col-12 col-md-6 col-s-1\">\n                {actorCards}\n            </div>\n        </div>\n    );\n}\n\nexport default ActorGallery;","import React from 'react';\nimport './ActorsPage.css';\nimport ActorModel from '../../Models/Actor/ActorModel';\nimport ActorGallery from '../../Components/ActorGallery/ActorGallery';\nimport axios from 'axios';\n\n\nfunction ActorsPage() {\n\n    const [filterInput, changeFilter] = React.useState(\"\");\n    const [sortBy, changeSort] = React.useState(\"fname\");\n    const [actors, setActors] = React.useState([]);\n    const [filteredActors, setFilteredActors] = React.useState([]);\n    \n\n    React.useState(() => {\n      axios.get(\"Actors.json\").then(response => {\n        setActors(response.data.map(plainActor => new ActorModel(plainActor.fname, plainActor.lname, plainActor.birthday, plainActor.actorImage, plainActor.imdbLink)));\n      });\n    }, []);\n    \n    React.useEffect(() => {\n      setFilteredActors(actors.filter(actor => (actor.getFullName().toLowerCase().includes(filterInput.toLowerCase()))));\n      console.log(actors)\n    }, [filterInput]);\n    \n    actors.sort((actor1, actor2) => {\n        if (actor1[sortBy] > actor2[sortBy]) {\n          return 1;\n        } else if (actor1[sortBy] < actor2[sortBy]) {\n          return -1;\n        } else {\n          return 0;\n        }\n      });\n\n    function filterActors(e) {\n        changeFilter(e.target.value);\n      }\n\n    return (\n        <div className=\"p-actors\">\n            <h1>Actor Gallery</h1>\n            <input type=\"text\" value={filterInput} placeholder=\"Filter by first name or last name\" onChange={(e) => filterActors(e)}/>\n            Sort By:\n            <select id=\"sortBy\" value={sortBy} onChange={(e) => changeSort(e.target.value)}>\n                <option value=\"fname\">First Name</option>\n                <option value=\"lname\">Last Name</option>\n            </select>\n            <ActorGallery actorsArray={filterInput !== \"\" ? filteredActors : actors}/>\n        </div>\n    );\n}\n\nexport default ActorsPage;","import './App.css';\nimport React from 'react';\nimport ActorsPage from './Pages/ActorsPage/ActorsPage';\n\nfunction App() {  \n\n  return (\n    <div className=\"app\">\n      <ActorsPage/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}